swagger: '2.0'
info:
  description: Example application using Spring boot + Rest + Swagger + ReDoc
  version: 1.0.0-0
  title: Example Sudent CRUD
  contact:
    name: Gabriel Oest
    url: 'http://softplan.com.br'
    email: gabriel.oest@softplan.com.br
  license:
    name: Apache License Version 2.0
    url: 'https://github.com/springfox/springfox/blob/master/LICENSE'
host: 'localhost:8080'
basePath: /swaggerReDoc
tags:
  - name: student-service
    description: Student Service
paths:
  /rest/student/:
    get:
      tags:
        - Students
      summary: Find all students
      description: Returns all students
      operationId: getAllStudents
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/Student'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Failure
  /rest/student/add:
    post:
      tags:
        - Students
      summary: Insert student
      description: Add a student passing a name and a subject
      operationId: addStudent
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          description: name
          required: true
          type: string
        - name: subject
          in: query
          description: subject
          required: false
          type: string
          default: unknown
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Student'
  '/rest/student/delete/{id}':
    delete:
      tags:
        - Students
      summary: Update student
      description: Delete a student passing the ID
      operationId: updateStudent
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Student'
  /rest/student/update:
    put:
      tags:
        - Students
      summary: Update student
      description: Update a student passing a name and a subject
      operationId: updateStudent_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: student
          description: student
          required: true
          schema:
            $ref: '#/definitions/Student'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Student'
  '/rest/student/{id}':
    get:
      tags:
        - Students
      summary: Find student by ID
      description: Returns a student by a specific ID
      operationId: getStudent
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Student'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Failure
definitions:
  Student:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      subject:
        type: string
